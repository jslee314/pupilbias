plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.jslee.pupilbias"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a"
        }

        packagingOptions {
            exclude "lib/arm64-v8a/libtensorflowlite_gpu_jni.so"
            exclude "lib/arm64-v8a/libtensorflowlite_jni.so"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }

    androidExtensions {
        experimental = true
    }

    dataBinding {
        enabled = true
    }

    aaptOptions {
        noCompress "tflite"
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //for androidx
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    // for navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // for material
    implementation 'com.google.android.material:material:1.3.0'

    // for constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // for test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // ViewModel and LiveData Library
    def lifecycle_ver = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_ver"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_ver"

    // for ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ver"

    // glide Library
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"    // 코틀린의 경우 annotationProcessor kapt로
    implementation "com.github.bumptech.glide:annotations:$glide_version"

    // glide + svg
    implementation 'com.caverock:androidsvg:1.2.1'

    // for Coroutines
    def coroutine_version = '1.3.7'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // dagger for di
    def dagger_version = "2.27"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation 'org.tensorflow:tensorflow-lite:2.3.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.3.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0'

//    def tensorflow_ver = "0.0.0-nightly"
//    implementation("org.tensorflow:tensorflow-lite:$tensorflow_ver") { changing = true }
//    implementation("org.tensorflow:tensorflow-lite-gpu:$tensorflow_ver") { changing = true }
//    implementation("org.tensorflow:tensorflow-lite-support:$tensorflow_ver") { changing = true }

}